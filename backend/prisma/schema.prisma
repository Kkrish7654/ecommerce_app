//!-----------------------------------------------------------------//
// !Author: Krish
// !status: Open

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id       Int    @id @default(autoincrement())
  username String
  name     String
  email    String
  password String

  created_at DateTime    @default(now()) @map("created_at")
  updated_at DateTime    @updatedAt @map("updated_at")
  user_cart  user_cart[]
}

model user_address {
  id Int @id @default(autoincrement())
}

model products {
  id          Int           @id @default(autoincrement())
  title       String
  description String
  price       Int
  image       String?
  thumbnail   String?
  gallery     Json?
  stocks      stocks[]
  user_cart   user_cart[]
  created_at  DateTime      @default(now()) @map("created_at")
  updated_at  DateTime      @updatedAt @map("updated_at")
  transaction transaction[]
}

model stocks {
  id              Int      @id @default(autoincrement())
  product_id      Int
  quantity        Int
  transactionDate DateTime @default(now())
  products        products @relation(fields: [product_id], references: [id])
  created_at      DateTime @default(now()) @map("created_at")
  updated_at      DateTime @updatedAt @map("updated_at")
}

model transaction {
  id               Int              @id @default(autoincrement())
  product_id       Int
  transaction_type transaction_type
  quantity         Int
  transactionDate  DateTime         @default(now())
  product          products         @relation(fields: [product_id], references: [id])
  created_at       DateTime         @default(now()) @map("created_at")
}

enum transaction_type {
  PURCHASE
  SALE
  RETURN
  ADJUSTMENT
}

model user_cart {
  id         Int      @id @default(autoincrement())
  product_id Int
  user_id    Int
  quantity   Int
  products   products @relation(fields: [product_id], references: [id])
  user       users    @relation(fields: [user_id], references: [id])
  created_at DateTime @default(now()) @map("created_at")
  updated_at DateTime @updatedAt @map("updated_at")
}
